services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: "${APP_NAME}_app"
        restart: unless-stopped
        volumes:
            - .:/var/www
        depends_on:
            - mysql
            - rabbitmq
        networks:
            - laravel_network
    mysql:
        image: mysql:8.0
        container_name: "${APP_NAME}_database"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
            - "${DB_PORT}:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel_network
    nginx:
        image: nginx:latest
        container_name: "${APP_NAME}_nginx"
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - laravel_network

    rabbitmq:
        image: rabbitmq:3.11-management
        container_name: "${APP_NAME}_rabbitmq"
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        networks:
            - laravel_network
    worker:
        build:
            context: .
            dockerfile: docker/worker/Dockerfile
        container_name: laravel_worker
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        depends_on:
            - rabbitmq
            - app
            - mysql
        networks:
            - laravel_network
        command: [ "/usr/bin/supervisord", "-c", "/etc/supervisord.conf" ]
networks:
    laravel_network:
        driver: bridge
volumes:
    rabbitmq_data:
    mysql_data:

